name: Deploy on PR Branch

on:
  issue_comment:
    types: [created]

jobs:
  get-command:
    runs-on: ubuntu-latest
    steps:
      - name: execute a command
        id: check
        uses: khan/pull-request-comment-trigger@master
        with:
          trigger: '/release'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}

  deploy:
    runs-on: ubuntu-latest
    needs: get-command
    if: needs.get-command.outputs.triggered == 'true'
    steps:
      # - name: get pull request ref
      #   id: get_pull_request_ref
      #   uses: octokit/request-action@v2.x
      #   with:
      #     route: GET /repos/:repository/pulls/:issue_id
      #     repository: ${{ github.repository }}
      #     issue_id: ${{ github.event.issue.number }}
      #   env:
      #     GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      # - name: create deployment
      #   id: create_deployment
      #   uses: octokit/request-action@v2.x
      #   with:
      #     route: POST /repos/:repository/deployments
      #     repository: ${{ github.repository }}
      #     ref: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}
      #     environment: dev
      #     auto_merge: false
      #   env:
      #     GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      # - name: set deployment status to in progress
      #   id: start_deployment
      #   uses: octokit/request-action@v2.x
      #   with:
      #     route: POST /repos/:repository/deployments/:deployment/statuses
      #     repository: ${{ github.repository }}
      #     deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
      #     # environment: dev
      #     # environment_url: https://example.com
      #     log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      #     state: in_progress
      #     mediaType: '{"previews": ["flash", "ant-man"]}'
      #   env:
      #     GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      # - name: Deploy the pull request
      #   uses: actions/checkout@v2

      # - name: Setup git user
      #   run: |
      #     git config --global user.name 'github-actions[bot]'
      #     git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: 12
      #     registry-url: 'https://registry.npmjs.org'
      #     scope: '@bna'
      # - run: yarn install --frozen-lockfile
      # - run: yarn build

      # - run: yarn lerna publish --canary --no-git-tag-version --no-push --conventional-commits=false --yes
      #   id: lerna_publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Set deployment status to success
      #   id: successful_deployment
      #   uses: octokit/request-action@v2.x
      #   with:
      #     route: POST /repos/:repository/deployments/:deployment/statuses
      #     repository: ${{ github.repository }}
      #     deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
      #     # environment: dev
      #     # environment_url: https://example.com
      #     log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      #     mediaType: '{"previews": ["ant-man"]}'
      #     state: success
      #   env:
      #     GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Yarn build
        id: lerna_publish
        run: |
          echo "::set-output name=publish-log::$(echo 'lerna notice shasum:        9aaf3d8d3e78db7919466d1f26006b8d3db36b15 lerna notice integrity:     sha512-DMKR5V2UPFDol[...]f3HGHOvq6zItQ== lerna notice total files:   34                                       lerna notice Successfully published:\n
          lerna success published 3 packages
          - @bna/commitlint-config@0.0.27-alpha.0+5c359c1
          - @bna/generator@0.0.27-alpha.0+5c359c1
          - @bna/next@0.0.27-alpha.0+5c359c1
          Done in 12.03s.')"

      - name: Yarn build
        id: lerna_publish_comment
        run: |
          result=${{ steps.lerna_publish.outputs.publish-log }}
          echo ${{ steps.lerna_publish.outputs.publish-log }}
          echo ${result##*Successfully published:}

      - name: Create version comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: ${{ steps.lerna_publish_comment.outputs.build-log }}
          reactions: eyes, hooray, rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      # - name: Set deployment status to failure
      #   id: failed_deployment
      #   uses: octokit/request-action@v2.x
      #   if: failure()
      #   with:
      #     route: POST /repos/:repository/deployments/:deployment/statuses
      #     repository: ${{ github.repository }}
      #     deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
      #     # environment: dev
      #     # environment_url: https://example.com
      #     log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      #     mediaType: '{"previews": ["ant-man"]}'
      #     state: failure
      #   env:
      #     GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
